/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ucd.lrv;

import java.io.IOException;

import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author rohan
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        configFileLoaded = new javax.swing.JLabel();
        numberedListLoaded = new javax.swing.JLabel();
        matchingPoses = new javax.swing.JLabel();
        promptsGenerated = new javax.swing.JLabel();
        xmlGenerated = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica", 1, 33)); // NOI18N
        jLabel1.setText("LRV Comic Generator");

        jButton1.setBackground(new java.awt.Color(255, 255, 234));
        jButton1.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jButton1.setText("Custom Comic");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 234));
        jButton2.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jButton2.setText("Generate AI Generated AI Generated Comic");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton2ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        jTextField1.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jTextField1.setText("Your Prompt Here");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        configFileLoaded.setText("✅ Configuration File Loaded");

        numberedListLoaded.setText("✅ Numbered List Recieved");

        matchingPoses.setText("✅ Poses Generated");

        promptsGenerated.setText("✅ Prompts Generated");

        xmlGenerated.setText("✅ XML Generated: output.xml");

        jLabel2.setText("Version 1.0.0.0.0.0.0.01");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel1Layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(jLabel2))
                                        .addComponent(jTextField1)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(configFileLoaded)
                                                        .addComponent(numberedListLoaded)
                                                        .addComponent(promptsGenerated)
                                                        .addComponent(matchingPoses)
                                                        .addComponent(xmlGenerated))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28,
                                        Short.MAX_VALUE)
                                .addComponent(configFileLoaded)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numberedListLoaded)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(promptsGenerated)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(matchingPoses)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xmlGenerated)
                                .addContainerGap()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        hideLabels();
        String prompt_from_user = jTextField1.getText();
        ConfigurationFile conf = ConfigurationFile.initialiseConfigurationFile("ConfigurationFile.conf");
        String part_a = "Generate a list of 10 RHYMING Pros and Cons about the topic: '";
        String part_b = "'. Each Pro and Con should be coupled together in a single sentence seperated by the word DELIMITED_HERE.";
        conf.setPrompt(part_a + prompt_from_user + part_b);
        try {
            doWork(conf);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }// GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        hideLabels();
        ConfigurationFile conf = ConfigurationFile.initialiseConfigurationFile("ConfigurationFile.conf");
        try {
            doWork(conf);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void doWork(ConfigurationFile conf) throws IOException {
        SwingWorker<Void, String> worker = new SwingWorker<Void, String>() {
            @Override
            protected Void doInBackground() throws Exception {
                publish("✅ Configuration File Loaded");

                GPTConnection chat = new GPTConnection(conf.getApiKey(), conf.getModel());
                String response = chat.getCompletion(conf.getPrompt(), conf.getCompletionsURL());

                if (NumberedList.isNumberedList(response)) {
                    System.out.println("Numbered list received, generating XML...");
                    publish("✅ Numbered List Received");
                    NumberedList numberedList = new NumberedList(response);
                    numberedList.makeXML(conf);
                } else {
                    boolean isWorking = false;
                    while (!isWorking) {
                        chat = new GPTConnection(conf.getApiKey(), conf.getModel());
                        response = chat.getCompletion(conf.getPrompt(), conf.getCompletionsURL());
                        isWorking = NumberedList.isNumberedList(response);
                    }
                    publish("✅ Numbered List Received");
                    System.out.println("Numbered list received, generating XML...");
                    NumberedList numberedList = new NumberedList(response);
                    publish("✅ Suggested Poses Generated");
                    numberedList.makeXML(conf);
                    publish("✅ Suggested Poses Matched");
                }
                System.out.println("GENERATED XML FILE: output.xml");
                publish("✅ XML Generated: output.xml");

                return null;
            }

            @Override
            protected void process(java.util.List<String> chunks) {
                // Update the UI with the latest progress/status messages
                for (String message : chunks) {
                    updateStatusLabel(message);
                }
            }

            @Override
            protected void done() {
                // Optionally, perform any final UI updates or cleanup after the background task
                // completes
            }
        };

        // Start the background task
        worker.execute();
    }

    private void updateStatusLabel(String message) {
        // Update the relevant JLabel based on the message received
        if (message.equals("✅ Configuration File Loaded")) {
            configFileLoaded.setText(message);
        } else if (message.equals("✅ Numbered List Received")) {
            numberedListLoaded.setText(message);
        } else if (message.equals("✅ Suggested Poses Generated")) {
            promptsGenerated.setText(message);
        } else if (message.equals("✅ Suggested Poses Matched")) {
            matchingPoses.setText(message);
        } else if (message.equals("✅ XML Generated: output.xml")) {
            xmlGenerated.setText(message);
        }
    }

    private void hideLabels() {
        configFileLoaded.setText("");
        matchingPoses.setText("");
        numberedListLoaded.setText("");
        promptsGenerated.setText("");
        xmlGenerated.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel configFileLoaded;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel matchingPoses;
    private javax.swing.JLabel numberedListLoaded;
    private javax.swing.JLabel promptsGenerated;
    private javax.swing.JLabel xmlGenerated;
    // End of variables declaration//GEN-END:variables
}
